{"ast":null,"code":"import { messageTypes } from './index';\nconst initialState = {\n  loading: false,\n  messages: [],\n  error: null\n};\nexport default function messageReducer() {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case messageTypes.SEND_MESSAGE_REQUEST:\n      return {\n        ...state,\n        loading: true\n      };\n    case messageTypes.SEND_MESSAGE_SUCCESS:\n      return {\n        ...state,\n        loading: false,\n        messages: [...state.messages, action.payload]\n      };\n    case messageTypes.SEND_MESSAGE_FAILURE:\n      return {\n        ...state,\n        loading: false,\n        error: action.payload\n      };\n    case messageTypes.GET_NOTIFICATION_REQUEST:\n      return {\n        ...state\n      };\n    case messageTypes.GET_NOTIFICATION_EMPTY:\n      return {\n        ...state\n      };\n    case messageTypes.GET_NOTIFICATION_SUCCESS:\n      return {\n        ...state,\n        messages: [...state.messages, action.payload]\n      };\n    case messageTypes.GET_NOTIFICATION_FAILURE:\n      return {\n        ...state,\n        error: action.payload\n      };\n    case messageTypes.DELETE_NOTIFICATION_REQUEST:\n      return {\n        ...state\n      };\n    case messageTypes.DELETE_NOTIFICATION_SUCCESS:\n      return {\n        ...state\n      };\n    case messageTypes.DELETE_NOTIFICATION_FAILURE:\n      return {\n        ...state,\n        error: action.payload\n      };\n    case messageTypes.CLEAR_MESSAGES:\n      return {\n        loading: false,\n        messages: [],\n        error: null\n      };\n    default:\n      return state;\n  }\n}","map":{"version":3,"names":["messageTypes","initialState","loading","messages","error","messageReducer","state","arguments","length","undefined","action","type","SEND_MESSAGE_REQUEST","SEND_MESSAGE_SUCCESS","payload","SEND_MESSAGE_FAILURE","GET_NOTIFICATION_REQUEST","GET_NOTIFICATION_EMPTY","GET_NOTIFICATION_SUCCESS","GET_NOTIFICATION_FAILURE","DELETE_NOTIFICATION_REQUEST","DELETE_NOTIFICATION_SUCCESS","DELETE_NOTIFICATION_FAILURE","CLEAR_MESSAGES"],"sources":["C:/Users/Oscarquell/Desktop/greenAPI/src/redux/Messages/reducers.js"],"sourcesContent":["import {messageTypes} from './index'\n\nconst initialState = {\n  loading: false,\n  messages: [],\n  error: null\n}\n\nexport default function messageReducer(state = initialState, action) {\n  switch (action.type) {\n    case messageTypes.SEND_MESSAGE_REQUEST:\n      return {\n        ...state,\n        loading: true\n      }\n    case messageTypes.SEND_MESSAGE_SUCCESS:\n      return {\n        ...state,\n        loading: false,\n        messages: [...state.messages, action.payload]\n      }\n    case messageTypes.SEND_MESSAGE_FAILURE:\n      return {\n        ...state,\n        loading: false,\n        error: action.payload\n      }\n\n    case messageTypes.GET_NOTIFICATION_REQUEST:\n      return {\n        ...state\n      }\n    case messageTypes.GET_NOTIFICATION_EMPTY:\n      return {\n        ...state\n      }\n    case messageTypes.GET_NOTIFICATION_SUCCESS:\n      return {\n        ...state,\n        messages: [...state.messages, action.payload]\n      }\n    case messageTypes.GET_NOTIFICATION_FAILURE:\n      return {\n        ...state,\n        error: action.payload\n      }\n\n    case messageTypes.DELETE_NOTIFICATION_REQUEST:\n      return {\n        ...state\n      }\n    case messageTypes.DELETE_NOTIFICATION_SUCCESS:\n      return {\n        ...state\n      }\n    case messageTypes.DELETE_NOTIFICATION_FAILURE:\n      return {\n        ...state,\n        error: action.payload\n      }\n\n    case messageTypes.CLEAR_MESSAGES:\n      return {\n        loading: false,\n        messages: [],\n        error: null\n      }\n\n    default:\n      return state\n  }\n}"],"mappings":"AAAA,SAAQA,YAAY,QAAO,SAAS;AAEpC,MAAMC,YAAY,GAAG;EACnBC,OAAO,EAAE,KAAK;EACdC,QAAQ,EAAE,EAAE;EACZC,KAAK,EAAE;AACT,CAAC;AAED,eAAe,SAASC,cAAcA,CAAA,EAA+B;EAAA,IAA9BC,KAAK,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAGN,YAAY;EAAA,IAAES,MAAM,GAAAH,SAAA,CAAAC,MAAA,OAAAD,SAAA,MAAAE,SAAA;EACjE,QAAQC,MAAM,CAACC,IAAI;IACjB,KAAKX,YAAY,CAACY,oBAAoB;MACpC,OAAO;QACL,GAAGN,KAAK;QACRJ,OAAO,EAAE;MACX,CAAC;IACH,KAAKF,YAAY,CAACa,oBAAoB;MACpC,OAAO;QACL,GAAGP,KAAK;QACRJ,OAAO,EAAE,KAAK;QACdC,QAAQ,EAAE,CAAC,GAAGG,KAAK,CAACH,QAAQ,EAAEO,MAAM,CAACI,OAAO;MAC9C,CAAC;IACH,KAAKd,YAAY,CAACe,oBAAoB;MACpC,OAAO;QACL,GAAGT,KAAK;QACRJ,OAAO,EAAE,KAAK;QACdE,KAAK,EAAEM,MAAM,CAACI;MAChB,CAAC;IAEH,KAAKd,YAAY,CAACgB,wBAAwB;MACxC,OAAO;QACL,GAAGV;MACL,CAAC;IACH,KAAKN,YAAY,CAACiB,sBAAsB;MACtC,OAAO;QACL,GAAGX;MACL,CAAC;IACH,KAAKN,YAAY,CAACkB,wBAAwB;MACxC,OAAO;QACL,GAAGZ,KAAK;QACRH,QAAQ,EAAE,CAAC,GAAGG,KAAK,CAACH,QAAQ,EAAEO,MAAM,CAACI,OAAO;MAC9C,CAAC;IACH,KAAKd,YAAY,CAACmB,wBAAwB;MACxC,OAAO;QACL,GAAGb,KAAK;QACRF,KAAK,EAAEM,MAAM,CAACI;MAChB,CAAC;IAEH,KAAKd,YAAY,CAACoB,2BAA2B;MAC3C,OAAO;QACL,GAAGd;MACL,CAAC;IACH,KAAKN,YAAY,CAACqB,2BAA2B;MAC3C,OAAO;QACL,GAAGf;MACL,CAAC;IACH,KAAKN,YAAY,CAACsB,2BAA2B;MAC3C,OAAO;QACL,GAAGhB,KAAK;QACRF,KAAK,EAAEM,MAAM,CAACI;MAChB,CAAC;IAEH,KAAKd,YAAY,CAACuB,cAAc;MAC9B,OAAO;QACLrB,OAAO,EAAE,KAAK;QACdC,QAAQ,EAAE,EAAE;QACZC,KAAK,EAAE;MACT,CAAC;IAEH;MACE,OAAOE,KAAK;EAChB;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}